=begin
#ESR Orders API

#API to process orders

OpenAPI spec version: 1.0.0
Contact: tomas.hreha@elder-studios.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module SwaggerClient
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # change recipient address
    # @param change_order_address change recipient address
    # @param [Hash] opts the optional parameters
    # @return [UploadResponse]
    def change_order_address(change_order_address, opts = {})
      data, _status_code, _headers = change_order_address_with_http_info(change_order_address, opts)
      return data
    end

    # 
    # change recipient address
    # @param change_order_address change recipient address
    # @param [Hash] opts the optional parameters
    # @return [Array<(UploadResponse, Fixnum, Hash)>] UploadResponse data, response status code and response headers
    def change_order_address_with_http_info(change_order_address, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DefaultApi.change_order_address ..."
      end
      # verify the required parameter 'change_order_address' is set
      if @api_client.config.client_side_validation && change_order_address.nil?
        fail ArgumentError, "Missing the required parameter 'change_order_address' when calling DefaultApi.change_order_address"
      end
      # resource path
      local_var_path = "/update_address"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(change_order_address)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UploadResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#change_order_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # retrieve order status and tracking information. status 1 is pending, status 3 is shipped, status 5 is complete, status 6 is cancelled
    # @param get_order_tracking check status and tracking
    # @param [Hash] opts the optional parameters
    # @return [TrackingResponse]
    def get_order_tracking(get_order_tracking, opts = {})
      data, _status_code, _headers = get_order_tracking_with_http_info(get_order_tracking, opts)
      return data
    end

    # 
    # retrieve order status and tracking information. status 1 is pending, status 3 is shipped, status 5 is complete, status 6 is cancelled
    # @param get_order_tracking check status and tracking
    # @param [Hash] opts the optional parameters
    # @return [Array<(TrackingResponse, Fixnum, Hash)>] TrackingResponse data, response status code and response headers
    def get_order_tracking_with_http_info(get_order_tracking, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DefaultApi.get_order_tracking ..."
      end
      # verify the required parameter 'get_order_tracking' is set
      if @api_client.config.client_side_validation && get_order_tracking.nil?
        fail ArgumentError, "Missing the required parameter 'get_order_tracking' when calling DefaultApi.get_order_tracking"
      end
      # resource path
      local_var_path = "/order_tracking"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(get_order_tracking)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TrackingResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#get_order_tracking\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # create order
    # @param upload_order upload order
    # @param [Hash] opts the optional parameters
    # @return [UploadResponse]
    def upload_order(upload_order, opts = {})
      data, _status_code, _headers = upload_order_with_http_info(upload_order, opts)
      return data
    end

    # 
    # create order
    # @param upload_order upload order
    # @param [Hash] opts the optional parameters
    # @return [Array<(UploadResponse, Fixnum, Hash)>] UploadResponse data, response status code and response headers
    def upload_order_with_http_info(upload_order, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DefaultApi.upload_order ..."
      end
      # verify the required parameter 'upload_order' is set
      if @api_client.config.client_side_validation && upload_order.nil?
        fail ArgumentError, "Missing the required parameter 'upload_order' when calling DefaultApi.upload_order"
      end
      # resource path
      local_var_path = "/upload_order"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(upload_order)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UploadResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#upload_order\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
